<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nomad.data.agent.domain.mappers.common.AipUserMapper">
  <resultMap id="BaseResultMap" type="com.nomad.data.agent.domain.dao.common.AipUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    <id column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="USER_NM" jdbcType="VARCHAR" property="userNm" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="BANK_ID" jdbcType="VARCHAR" property="bankId" />
    <result column="DEPT" jdbcType="VARCHAR" property="dept" />
    <result column="GIT_USER_NM" jdbcType="VARCHAR" property="gitUserNm" />
    <result column="GIT_EMAIL" jdbcType="VARCHAR" property="gitEmail" />
    <result column="PSWD" jdbcType="VARCHAR" property="pswd" />
    <result column="GIT_TOKEN" jdbcType="VARCHAR" property="gitToken" />
    <result column="USER_LV" jdbcType="NUMERIC" property="userLv" />
    <result column="ACC_AUTH" jdbcType="NUMERIC" property="accAuth" />
    <result column="SNUP_STS" jdbcType="VARCHAR" property="snupSts" />
    <result column="TKN" jdbcType="VARCHAR" property="tkn" />
    <result column="REG_DT" jdbcType="TIMESTAMP" property="regDt" />
    <result column="MOD_DT" jdbcType="TIMESTAMP" property="modDt" />
    <result column="GIT_PSWD" jdbcType="NUMERIC" property="gitPswd" />
    <result column="IP" jdbcType="VARCHAR" property="ip" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    USER_ID, USER_NM, EMAIL, BANK_ID, DEPT, GIT_USER_NM, GIT_EMAIL, PSWD, GIT_TOKEN, 
    USER_LV, ACC_AUTH, SNUP_STS, TKN, REG_DT, MOD_DT, GIT_PSWD, IP
  </sql>
  <select id="selectByExample" parameterType="com.nomad.data.agent.domain.dao.common.AipUserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from AIP_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.nomad.data.agent.domain.dao.common.AipUserKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from AIP_USER
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.nomad.data.agent.domain.dao.common.AipUserKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    delete from AIP_USER
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.nomad.data.agent.domain.dao.common.AipUserExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    delete from AIP_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nomad.data.agent.domain.dao.common.AipUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    insert into AIP_USER (USER_ID, USER_NM, EMAIL, 
      BANK_ID, DEPT, GIT_USER_NM, 
      GIT_EMAIL, PSWD, GIT_TOKEN, 
      USER_LV, ACC_AUTH, SNUP_STS, 
      TKN, REG_DT, MOD_DT, 
      GIT_PSWD, IP)
    values (#{userId,jdbcType=VARCHAR}, #{userNm,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{bankId,jdbcType=VARCHAR}, #{dept,jdbcType=VARCHAR}, #{gitUserNm,jdbcType=VARCHAR}, 
      #{gitEmail,jdbcType=VARCHAR}, #{pswd,jdbcType=VARCHAR}, #{gitToken,jdbcType=VARCHAR}, 
      #{userLv,jdbcType=NUMERIC}, #{accAuth,jdbcType=NUMERIC}, #{snupSts,jdbcType=VARCHAR}, 
      #{tkn,jdbcType=VARCHAR}, #{regDt,jdbcType=TIMESTAMP}, #{modDt,jdbcType=TIMESTAMP}, 
      #{gitPswd,jdbcType=NUMERIC}, #{ip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nomad.data.agent.domain.dao.common.AipUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    insert into AIP_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userNm != null">
        USER_NM,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="bankId != null">
        BANK_ID,
      </if>
      <if test="dept != null">
        DEPT,
      </if>
      <if test="gitUserNm != null">
        GIT_USER_NM,
      </if>
      <if test="gitEmail != null">
        GIT_EMAIL,
      </if>
      <if test="pswd != null">
        PSWD,
      </if>
      <if test="gitToken != null">
        GIT_TOKEN,
      </if>
      <if test="userLv != null">
        USER_LV,
      </if>
      <if test="accAuth != null">
        ACC_AUTH,
      </if>
      <if test="snupSts != null">
        SNUP_STS,
      </if>
      <if test="tkn != null">
        TKN,
      </if>
      <if test="regDt != null">
        REG_DT,
      </if>
      <if test="modDt != null">
        MOD_DT,
      </if>
      <if test="gitPswd != null">
        GIT_PSWD,
      </if>
      <if test="ip != null">
        IP,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userNm != null">
        #{userNm,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null">
        #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="gitUserNm != null">
        #{gitUserNm,jdbcType=VARCHAR},
      </if>
      <if test="gitEmail != null">
        #{gitEmail,jdbcType=VARCHAR},
      </if>
      <if test="pswd != null">
        #{pswd,jdbcType=VARCHAR},
      </if>
      <if test="gitToken != null">
        #{gitToken,jdbcType=VARCHAR},
      </if>
      <if test="userLv != null">
        #{userLv,jdbcType=NUMERIC},
      </if>
      <if test="accAuth != null">
        #{accAuth,jdbcType=NUMERIC},
      </if>
      <if test="snupSts != null">
        #{snupSts,jdbcType=VARCHAR},
      </if>
      <if test="tkn != null">
        #{tkn,jdbcType=VARCHAR},
      </if>
      <if test="regDt != null">
        #{regDt,jdbcType=TIMESTAMP},
      </if>
      <if test="modDt != null">
        #{modDt,jdbcType=TIMESTAMP},
      </if>
      <if test="gitPswd != null">
        #{gitPswd,jdbcType=NUMERIC},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nomad.data.agent.domain.dao.common.AipUserExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    select count(*) from AIP_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    update AIP_USER
    <set>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userNm != null">
        USER_NM = #{record.userNm,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.bankId != null">
        BANK_ID = #{record.bankId,jdbcType=VARCHAR},
      </if>
      <if test="record.dept != null">
        DEPT = #{record.dept,jdbcType=VARCHAR},
      </if>
      <if test="record.gitUserNm != null">
        GIT_USER_NM = #{record.gitUserNm,jdbcType=VARCHAR},
      </if>
      <if test="record.gitEmail != null">
        GIT_EMAIL = #{record.gitEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.pswd != null">
        PSWD = #{record.pswd,jdbcType=VARCHAR},
      </if>
      <if test="record.gitToken != null">
        GIT_TOKEN = #{record.gitToken,jdbcType=VARCHAR},
      </if>
      <if test="record.userLv != null">
        USER_LV = #{record.userLv,jdbcType=NUMERIC},
      </if>
      <if test="record.accAuth != null">
        ACC_AUTH = #{record.accAuth,jdbcType=NUMERIC},
      </if>
      <if test="record.snupSts != null">
        SNUP_STS = #{record.snupSts,jdbcType=VARCHAR},
      </if>
      <if test="record.tkn != null">
        TKN = #{record.tkn,jdbcType=VARCHAR},
      </if>
      <if test="record.regDt != null">
        REG_DT = #{record.regDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modDt != null">
        MOD_DT = #{record.modDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gitPswd != null">
        GIT_PSWD = #{record.gitPswd,jdbcType=NUMERIC},
      </if>
      <if test="record.ip != null">
        IP = #{record.ip,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    update AIP_USER
    set USER_ID = #{record.userId,jdbcType=VARCHAR},
      USER_NM = #{record.userNm,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      BANK_ID = #{record.bankId,jdbcType=VARCHAR},
      DEPT = #{record.dept,jdbcType=VARCHAR},
      GIT_USER_NM = #{record.gitUserNm,jdbcType=VARCHAR},
      GIT_EMAIL = #{record.gitEmail,jdbcType=VARCHAR},
      PSWD = #{record.pswd,jdbcType=VARCHAR},
      GIT_TOKEN = #{record.gitToken,jdbcType=VARCHAR},
      USER_LV = #{record.userLv,jdbcType=NUMERIC},
      ACC_AUTH = #{record.accAuth,jdbcType=NUMERIC},
      SNUP_STS = #{record.snupSts,jdbcType=VARCHAR},
      TKN = #{record.tkn,jdbcType=VARCHAR},
      REG_DT = #{record.regDt,jdbcType=TIMESTAMP},
      MOD_DT = #{record.modDt,jdbcType=TIMESTAMP},
      GIT_PSWD = #{record.gitPswd,jdbcType=NUMERIC},
      IP = #{record.ip,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nomad.data.agent.domain.dao.common.AipUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    update AIP_USER
    <set>
      <if test="userNm != null">
        USER_NM = #{userNm,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null">
        BANK_ID = #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        DEPT = #{dept,jdbcType=VARCHAR},
      </if>
      <if test="gitUserNm != null">
        GIT_USER_NM = #{gitUserNm,jdbcType=VARCHAR},
      </if>
      <if test="gitEmail != null">
        GIT_EMAIL = #{gitEmail,jdbcType=VARCHAR},
      </if>
      <if test="pswd != null">
        PSWD = #{pswd,jdbcType=VARCHAR},
      </if>
      <if test="gitToken != null">
        GIT_TOKEN = #{gitToken,jdbcType=VARCHAR},
      </if>
      <if test="userLv != null">
        USER_LV = #{userLv,jdbcType=NUMERIC},
      </if>
      <if test="accAuth != null">
        ACC_AUTH = #{accAuth,jdbcType=NUMERIC},
      </if>
      <if test="snupSts != null">
        SNUP_STS = #{snupSts,jdbcType=VARCHAR},
      </if>
      <if test="tkn != null">
        TKN = #{tkn,jdbcType=VARCHAR},
      </if>
      <if test="regDt != null">
        REG_DT = #{regDt,jdbcType=TIMESTAMP},
      </if>
      <if test="modDt != null">
        MOD_DT = #{modDt,jdbcType=TIMESTAMP},
      </if>
      <if test="gitPswd != null">
        GIT_PSWD = #{gitPswd,jdbcType=NUMERIC},
      </if>
      <if test="ip != null">
        IP = #{ip,jdbcType=VARCHAR},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nomad.data.agent.domain.dao.common.AipUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    update AIP_USER
    set USER_NM = #{userNm,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      BANK_ID = #{bankId,jdbcType=VARCHAR},
      DEPT = #{dept,jdbcType=VARCHAR},
      GIT_USER_NM = #{gitUserNm,jdbcType=VARCHAR},
      GIT_EMAIL = #{gitEmail,jdbcType=VARCHAR},
      PSWD = #{pswd,jdbcType=VARCHAR},
      GIT_TOKEN = #{gitToken,jdbcType=VARCHAR},
      USER_LV = #{userLv,jdbcType=NUMERIC},
      ACC_AUTH = #{accAuth,jdbcType=NUMERIC},
      SNUP_STS = #{snupSts,jdbcType=VARCHAR},
      TKN = #{tkn,jdbcType=VARCHAR},
      REG_DT = #{regDt,jdbcType=TIMESTAMP},
      MOD_DT = #{modDt,jdbcType=TIMESTAMP},
      GIT_PSWD = #{gitPswd,jdbcType=NUMERIC},
      IP = #{ip,jdbcType=VARCHAR}
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.nomad.data.agent.domain.dao.common.AipUserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 11:34:27 KST 2020.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from AIP_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>